- name: Get elastic repo
  copy:
    src: elasticsearch.repo
    dest: /etc/yum.repos.d/elasticsearch.repo

- name: Uninstall if elasticsearch or kibana exist
  yum:
    name:
      - elasticsearch
      - kibana
    state: removed

- name: Remove elasticsearch configs
  file:
    path: /etc/elasticsearch
    state: absent

- name: Remove kibana configs
  file:
    path: /etc/kibana
    state: absent

- name: Clear /var/lib/elasticsearch
  file:
    path: /var/lib/elasticsearch
    state: absent

- name: Clear /var/lib/kibana
  file:
    path: /var/lib/kibana
    state: absent

#- name: Install elasticsearch and kibana
#  yum: 
#    name: 
#      - elasticsearch
#      - kibana
#    state: installed
#  notify:
#    - Enable services
#
#- name: Apply heap size limit
#  copy:
#    src: heap_size.options
#    dest: /etc/elasticsearch/jvm.options.d/heap_size.options
#  notify:
#    - Restart elasticsearch
#
#- name: Get elasticsearch config
#  template:
#    src: elasticsearch.yml.j2
#    dest: /etc/elasticsearch/elasticsearch.yml
#  notify:
#    - Restart elasticsearch
#
#- name: Ensure elasticsearch is running
#  systemd:
#    name: elasticsearch
#    state: restarted
#
#- name: Ensure kibana is not running
#  systemd:
#    name: kibana
#    state: stopped
#
#- name: Generate elasticsearch passwords
#  shell:
#    cmd: /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto -v -b
#  register: es_generate_password
#
#- name: Print output
#  debug:
#    var: es_generate_password
#
#- name: Debug password (elastic)
#  shell:
#    cmd: echo "{{ es_generate_password.stdout }}" | grep "PASSWORD elastic"
#  register: elastic_password
#
#- name: Debug password (kibana_system)
#  shell:
#    cmd: echo "{{ es_generate_password.stdout }}" | grep "PASSWORD kibana_system"
#  register: kibana_password
#
#- name: Print passwords
#  debug:
#    var: {{ item }}
#  with_items:
#    - elastic_password
#    - kibana_password
#
#- name: Get kibana config
#  copy:
#    src: kibana.yml
#    dest: /etc/kibana/kibana.yml
#  notify:
#    - Restart kibana
#
#- meta: flush_handlers
#
#- name: Create k8s index pattern
#  uri:
#    url: http://{{ hostvars['server-3']['ansible_host'] }}:5601/api/saved_objects/index-pattern/k8s-*?overwrite=true
#    method: POST
#    body_format: json
#    headers:
#      kbn-xsrf: this_is_required_header
#    body:
#      attributes:
#        title: "k8s-*"
#        timeFieldName: "@timestamp"
#
- name: Add gitlab repo
  copy:
    src: gitlab-ee.repo
    dest: /etc/yum.repos.d/gitlab-ee.repo

- name: Install gitlab
  yum:
    name: gitlab-ee
  environment:
    EXTERNAL_URL: "http://{{ hostvars['server-3']['ansible_host'] }}"
    GITLAB_ROOT_PASSWORD: "{{ gitlab_password }}"

- name: Reconfigure gitlab
  command:  
    cmd: gitlab-ctl reconfigure

- name: Create gitlab token
  shell:
    cmd: "gitlab-rails runner \"token = User.find_by_username('root').personal_access_tokens.create(scopes: [:read_user, :read_repository], name: 'Automation token'); token.set_token('{{ gitlab_token }}'); token.save!\""
  register: set_gitlab_token

- name: Debug gitlab token
  debug:
    var: set_gitlab_token