---
- name: Pull kubespray
  git:
    repo: https://github.com/kubernetes-sigs/kubespray.git
    version: v{{ k8s_kubespray_version }}
    dest: /root/kubespray
    #Descreases idempotency, might improve this later.
    force: yes

- name: Create inventory
  template:
    src: inventory.ini.j2
    dest: /root/kubespray/inventory/sample/inventory.ini

- name: Set cluster name
  lineinfile:
    path:  /root/kubespray/inventory/sample/group_vars/k8s_cluster/k8s-cluster.yml
    regexp: '^cluster_name:'
    line: 'cluster_name: {{ k8s_cluster_name }}'

- name: Set network plugin
  lineinfile:
    path:  /root/kubespray/inventory/sample/group_vars/k8s_cluster/k8s-cluster.yml
    regexp: '^kube_network_plugin:'
    line: 'kube_network_plugin: {{ k8s_kube_network_plugin }}'

- name: Set dns mode
  lineinfile:
    path:  /root/kubespray/inventory/sample/group_vars/k8s_cluster/k8s-cluster.yml
    regexp: '^dns_mode:'
    line: 'dns_mode: {{ k8s_dns_mode }}'

- name: Check if cluster ready
  uri:
    url: https://localhost:6443/readyz
    return_content: yes
    validate_certs: no
  register: k8s_ready
  ignore_errors: true

- name: Install k8s with kubespray
  #Find alternatives, run all of the roles as another kubespray role? Use ansible import/include?
  command:
    cmd: ansible-playbook -i inventory/sample/inventory.ini  --become --become-user=root cluster.yml
    chdir: /root/kubespray
  when: k8s_ready.content != 'ok'

- name: Create patch for node labes
  template:
    src: label-patch.yaml.j2
    dest: /tmp/label-patch.yaml

- name: Set label for worker node
  shell:
    cmd: kubectl patch nodes server-0 --patch "$(cat /tmp/label-patch.yaml)"

- name: Get helm tar
  get_url:
    url: https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz
    dest: /tmp/helm-v{{ helm_version }}-linux-amd64.tar.gz
    checksum: sha256:https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz.sha256sum

- name: Extract helm tar
  unarchive:
    src: /tmp/helm-v{{ helm_version }}-linux-amd64.tar.gz
    dest: /tmp
    creates: /tmp/linux-amd64/helm

- name: Copy helm binary
  copy:
    src: /tmp/linux-amd64/helm
    remote_src: yes
    dest: /usr/local/bin/helm
    mode: u+x,g+x,o+x

- name: Add prometheus-community repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

- name: Insall chart
  kubernetes.core.helm:
    name: prometheus
    namespace: monitoring
    chart_ref: prometheus-community/prometheus
    create_namespace: yes
    values:
      alermanager:
        enabled: false
      pushgateway:
        enabled: false
      kubeStateMetrics:
        kube-state-metrics:
          nodeSelector:
            {{ isolation_label }}
          tolerations:
            - key: node-role.kubernetes.io/master
              effect: NoSchedule
      server:
        nodeSelector:
          {{ isolation_label }}
        tolerations:
          - key: node-role.kubernetes.io/master
            effect: NoSchedule
      nodeExporter:
        nodeSelector:
          {{ isolation_label }}
        tolerations:
          - key: node-role.kubernetes.io/master
            effect: NoSchedule
            
